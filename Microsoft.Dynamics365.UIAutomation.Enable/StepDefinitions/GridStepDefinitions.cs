using System;
using TechTalk.SpecFlow;
using FluentAssertions;
using System.Security;

using Microsoft.Dynamics365.UIAutomation.Browser;
using Microsoft.Dynamics365.UIAutomation.Api.UCI;

namespace Microsoft.Dynamics365.UIAutomation.Enable.StepDefinitions
{
    [Binding]
    public class GridStepDefinitions : BaseStepDefinitions
    {
        private readonly ScenarioContext _scenarioContext;
        private readonly FeatureContext _featureContext;

        public GridStepDefinitions(ScenarioContext scenarioContext, FeatureContext featureContext)
        {
            _scenarioContext = scenarioContext;
            _featureContext = featureContext;
        }

        [When(@"user opens record '([^']*)'")]
        public void WhenUserOpensRecord(string recordNo)
        {
            XrmApp.Grid.BC_OpenRecord(recordNo);
        }

        [Then(@"user sees that new record in '[^']*?' was created successfully")]
        public void ThenUserSeesThatNewRecordWasCreated()
        {
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().NotBe(0);
            GridItems[0]["No."].Should().Be(AutogeneratedValue);
        }

        [Then(@"user sees '[^']*?' record '([^']*)' in search results")]
        public void ThenUserSeesRecordInSearchResults(string recordNumber)
        {
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().NotBe(0);
            GridItems[0]["No."].Should().Be(recordNumber);
        }

        [When(@"user searches for '([^']*)' record '([^']*)'")]
        public void WhenUserSearchesForRecord(string searchPage, string searchValue)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.GlobalSearch.BC_SearchForPage(searchPage);
            XrmApp.Grid.BC_SearchRecords($"'{searchValue}'");
        }

        [When(@"user searches for record '([^']*)'")]
        public void WhenUserSearchesForRecord(string searchValue)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.Grid.BC_SearchRecords($"'{searchValue}'");
        }

        [When(@"user searches for new record")]
        [When(@"user searches for new records")]
        public void WhenUserSearchesForNewRecords()
        {
            _scenarioContext.Remove("GridItems");
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            XrmApp.Grid.BC_SearchRecords($"'{AutogeneratedValue}'");
        }

        [When(@"user searches for '([^']*)' new record")]
        public void WhenUserSearchesForNewRecord(string searchPage)
        {
            _scenarioContext.Remove("GridItems");
            XrmApp.GlobalSearch.BC_SearchForPage(searchPage);
            var AutogeneratedValue = _scenarioContext["AutogeneratedValue"].ToString();
            XrmApp.Grid.BC_SearchRecords($"'{AutogeneratedValue}'");
        }

        [Then(@"user sees that new record in '[^']*?' does not exist")]
        public void ThenUserSeesThatRecordInDoesNotExist()
        {
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            var MatchingRecordsFound = GridItems.Count;
            MatchingRecordsFound.Should().Be(0);
        }

        [Then(@"user sees that '[^']*?' column '([^']*)' has value '([^']*)'")]
        public void ThenUserSeesThatColumnHasValue(string column, string expectedColumnValue)
        {
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            string ActualColumnValue = GridItems[0][column].ToString();
            ActualColumnValue.Should().Be(expectedColumnValue);
        }

        [Then(@"user sees that '[^']*?' column '([^']*)' has populated value")]
        public void ThenUserSeesThatColumnHasPopulatedValue(string column)
        {
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            string ActualColumnValue = GridItems[0][column].ToString();
            ActualColumnValue.Should().NotBeEmpty();
        }

        [Then(@"user sees that '[^']*?' row '([\d]*)' in column '([^']*)' has value '([^']*)'")]
        public void ThenUserSeesThatGridRowInColumnHasValue(int gridRow, string gridColumnName, string expectedCellValue)
        {
            int GridIndex = gridRow - 1;
            var GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            GridItems[GridIndex][gridColumnName].Should().Be(expectedCellValue);
        }

        [StepDefinition(@"user sees search results")]
        public void ThenUserSeesSearchResults()
        {
            _scenarioContext.Remove("GridItems");
            _scenarioContext.Add("GridItems", XrmApp.Grid.BC_GetGridItems());
        }

        [When(@"user opens first record")]
        public void WhenUserOpensFirstRecord()
        {
            List<GridItem>? GridItems = _scenarioContext["GridItems"] as List<GridItem>;
            XrmApp.Grid.BC_OpenRecord(GridItems?.ToArray()[0]["No."].ToString());
        }
    }
}
